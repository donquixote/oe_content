<?php

/**
 * @file
 * The OpenEuropa Content module.
 */

declare(strict_types = 1);

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Field\FieldStorageDefinitionInterface;
use Drupal\link\LinkItemInterface;

/**
 * Implements hook_entity_bundle_field_info().
 */
function oe_content_entity_bundle_field_info(EntityTypeInterface $entity_type, $bundle, array $base_field_definitions) {
  $fields = [];
  // Not alter non-corporate node bundles.
  if ($entity_type->id() !== 'node' || !(in_array($bundle, array(
      'oe_call_tenders',
      'oe_event',
      'oe_news',
      'oe_organisation',
      'oe_page',
      'oe_policy',
      'oe_project',
      'oe_publication',
  )))) {
    return $fields;
  }

  $fields['oe_content_short_title'] = BaseFieldDefinition::create('string')
    ->setLabel(t('Alternative title'))
    ->setDescription(t('Use this field to create an alternative title for use in the URL and in list views. If the page title is longer than 60 characters, you can add a shorter title here.'))
    ->setRequired(FALSE)
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setSetting('max_length', 255)
    ->setDisplayOptions('form', [
      'type' => 'string_textfield',
      'weight' => 0,
    ])
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);

  $fields['oe_content_navigation_title'] = BaseFieldDefinition::create('string')
    ->setLabel(t('Navigation title'))
    ->setRequired(FALSE)
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setSetting('max_length', 255)
    ->setDisplayOptions('form', [
      'type' => 'string_textfield',
      'weight' => 0,
    ])
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);

  $fields['oe_content_content_owner'] = BaseFieldDefinition::create('skos_concept_entity_reference')
    ->setLabel(t('Content owner'))
    ->setDescription(t('This is not the writer of the content, but the subject matter expert responsible for keeping this content up to date.'))
    ->setRequired(TRUE)
    ->setTranslatable(FALSE)
    ->setRevisionable(TRUE)
    ->setCardinality(FieldStorageDefinitionInterface::CARDINALITY_UNLIMITED)
    ->setSettings([
      'target_type' => 'skos_concept',
      'handler_settings' => [
        'concept_schemes' => [
          'http://publications.europa.eu/resource/authority/corporate-body',
        ],
        'field' => [
          'field_name' => 'oe_content_content_owner',
          'entity_type' => 'node',
          'bundle' => NULL,
          'concept_schemes' => [
            'http://publications.europa.eu/resource/authority/corporate-body',
          ],
        ],
      ],
      'default_value' => 0,
    ])
    ->setDisplayOptions('form', [
      'type' => 'skos_concept_entity_reference_autocomplete',
      'weight' => 0,
    ])
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);

  $fields['oe_content_legacy_link'] = BaseFieldDefinition::create('link')
    ->setLabel(t('Redirect link'))
    ->setDescription(t('Add a link to this field to automatically redirect the user to a different page. Use this to prevent duplication of content.'))
    ->setRequired(FALSE)
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setSettings([
      'link_type' => LinkItemInterface::LINK_EXTERNAL,
      'title' => DRUPAL_DISABLED,
    ])
    ->setDisplayOptions('form', [
      'type' => 'link_default',
      'weight' => 0,
    ])
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);

  return $fields;
}

/**
 * Implements hook_locale_translation_projects_alter().
 */
function oe_content_locale_translation_projects_alter(&$projects) {
  $projects['oe_content']['info']['interface translation server pattern'] = drupal_get_path('module', 'oe_content') . '/translations/%project-%language.po';
}
